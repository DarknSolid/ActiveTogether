@attribute [Route(RoutingConstants.RESET_PASSWORD)]
@using System.ComponentModel.DataAnnotations;
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.JSInterop;
@using ModelLib.ApiDTOs;
@using RazorLib.Interfaces;
@using RazorLib.Utils;
@inject IApiClient ApiClient
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject ISnackbar snackbar

<MudBreakpointProvider OnBreakpointChanged="(Breakpoint b) => _isMobile = b <= Breakpoint.Xs" />

<MudContainer MaxWidth="MaxWidth.Small" Style=@("min-width:375px; max-width: 400px; margin-left:auto; margin-right:auto; " + (_isMobile ? "width:100%;" : "padding-top: 50px;")) Class=@(_isMobile ? "pa-0" : "")>

    <EditForm Model="@_model" OnValidSubmit="OnSubmit">
        <DataAnnotationsValidator />

        <MudCard Class="rounded-lg" Style=@(_isMobile ? "height:100%;" : "")>

            <MudCardHeader>
                <CardHeaderContent>
                    <MudStack Justify="Justify.Center">
                        <MudText Align="Align.Center" Typo="Typo.h3">DoggoWorld</MudText>
                        <MudImage ObjectFit="ObjectFit.Contain" Height=115 Src=@Images.LogoBorderedPng />
                    </MudStack>

                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>

                <MudGrid Spacing="2" Class="mb-5">

                    @if (_didSubmit && !_success)
                    {
                        <MudAlert Severity="Severity.Error">Fejl ved nulstilling af password</MudAlert>
                    }

                    <MudItem xs="12" sm="12">
                        <MudTextField Disabled=true Required="true" Variant="Variant.Outlined" Label="Email"
                                      @bind-Value="_model.Email" For="@(() => _model.Email)" InputType="InputType.Email" />
                    </MudItem>

                    <MudItem xs="12" sm="12">
                        <MudTextField Disabled=_loading Required="true" Variant="Variant.Outlined" Label="Password"
                                      @bind-Value="_model.NewPassword" For="@(() => _model.NewPassword)" InputType="InputType.Password" />
                    </MudItem>
                    <MudItem xs="12" sm="12">
                        <MudTextField Disabled=_loading Required="true" Variant="Variant.Outlined" Label="Gentag Password"
                        @bind-Value="_model.NewPasswordRepeated" For="@(() => _model.NewPasswordRepeated)" InputType="InputType.Password" />
                    </MudItem>

                </MudGrid>

                <MudStack Style="width:100%;" Justify="Justify.Center" Row="true" AlignItems="AlignItems.Center">
                    <MudButton Disabled=_loading Color="Color.Primary" Variant="Variant.Filled" ButtonType="ButtonType.Submit">
                        @if (_loading)
                        {
                            <MudProgressCircular Indeterminate=true />
                        }
                        Nulstil Password
                        </MudButton>
                </MudStack>

            </MudCardContent>
        </MudCard>

    </EditForm>

</MudContainer>

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "token")]
    public string Token { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "email")]
    public string Email { get; set; }

    private bool _loading;
    private bool _didSubmit;
    private bool _success;
    private bool _isMobile;

    private ResetPasswordDTO _model;

    public ResetPassword()
    {
        _model = new();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        _model.Email = Email;
        _model.Token = Token;
    }

    public async Task OnSubmit()
    {
        _loading = true;
        var response = await ApiClient.ResetPassword(_model);
        _success = response.IsSuccessStatusCode;
        if (_success)
        {
            snackbar.Add("Successfully reset your password!", Severity.Success);
            NavigationManager.NavigateToLogin(callback: RoutingConstants.USER_SETTINGS);
        }
        else
        {
            snackbar.Add("Failed resetting your password.", Severity.Error);
        }
        _didSubmit = true;
        _loading = false;
    }

}
