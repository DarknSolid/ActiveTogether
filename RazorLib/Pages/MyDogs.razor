@attribute [Route(RoutingConstants.MY_DOGS)]

@using ModelLib.DTOs.Dogs
@using RazorLib.Components
@using RazorLib.Components.CustomMudMenus
@using RazorLib.Components.Dogs
@using RazorLib.Interfaces
@inject IApiClient ApiClient
@inject NavigationManager NavigationManager;


<MudBreakpointProvider OnBreakpointChanged="(Breakpoint b) => _isMobile = b <= Breakpoint.Md" />


<MudContainer Class="mb-5">
    <MudText Class="my-5" Typo="Typo.h4" Align="Align.Center">Mine Hunde</MudText>

    <MudStack AlignItems="AlignItems.Center" Style="width:100%;">

        @if (!_isMobile)
        {
            <MudButton Class="mb-5" StartIcon="@Icons.Material.Filled.Add"
                       Variant=Variant.Filled
                       Color=Color.Primary
                       Style="width:fit-content"
                       OnClick="() => NavigationManager.NavigateToCreateDog()">
                Tilføj Hund
            </MudButton>
        }
    </MudStack>

    <MudStack>

        @if (_loading)
        {
            @for (int i = 0; i < 4; i++)
            {
                <DogCardSkeleton />
            }
        }
        else
        {
            @foreach (var dog in _dogs)
            {
                <DogCard Dog="@dog">
                    <MudMenu StartIcon="@Icons.Material.Filled.MoreVert">
                        <div class="d-flex flex-column">

                            <MudMenuItem OnTouch="() => NavigationManager.NavigateToCreateDog(dog.Id)" OnClick="() => NavigationManager.NavigateToCreateDog(dog.Id)">
                                Edit
                            </MudMenuItem>
                            <MudMenuItem OnTouch=@(() => DeleteDog(dog.Id)) OnClick="@(() => DeleteDog(dog.Id))">
                                <MudText Color="Color.Error">Delete</MudText>
                            </MudMenuItem>
                        </div>
                    </MudMenu>
                </DogCard>
            }
        }
    </MudStack>

    @if (_isMobile)
    {
        <MudFab OnClick="() => NavigationManager.NavigateToCreateDog()" Style="position: absolute; bottom: 30px; right: 30px;" Color="Color.Primary" Size="Size.Large" StartIcon="@Icons.Material.Filled.Add" />
    }

</MudContainer>

@code {
    private List<DogListDTO> _dogs;
    private bool _loading;

    private bool _isMobile;

    protected override async Task OnInitializedAsync()
    {
        await FetchDogs();
        await base.OnInitializedAsync();
    }

    private async Task FetchDogs()
    {
        _loading = true;
        _dogs = await ApiClient.GetMyDogsAsync();
        _loading = false;
    }

    private async Task DeleteDog(int id)
    {
        await ApiClient.DeleteDogAsync(id);
        await FetchDogs();
    }
}
