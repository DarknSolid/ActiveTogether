@using RazorLib.Components
@using RazorLib.Interfaces
@using ModelLib.DTOs.DogPark
@inject IApiClient ApiClient


@if (!_isLoading)
{
    <MudCard style="background-color:transparent">
        <MudCarousel Class="mud-width-full" Style="height:200px;" ShowArrows="@false" ShowBullets="true" AutoCycle="true" TData="object">
            @foreach (var url in _dogParkDetails.ImageUrls)
            {
                <MudCarouselItem Transition="Transition.Slide" Color="@Color.Primary">
                    <div class="d-flex" style="height:100%">
                        <MudImage ObjectFit="ObjectFit.Cover" Style="width:100%" Src="@url" Alt="Dog Park Front Page Image"/>
                    </div>
                </MudCarouselItem>
            }
        </MudCarousel>
        <MudCardContent>
            <MudGrid Spacing="40" style="grid-row-gap:20px">
                <MudItem xs="12">
                    <MudText Typo="Typo.h4">@_dogParkDetails.Name</MudText>
                    <MudPaper Style="align-items: center" Class="d-flex flex-row flex-grow-1 gap-2" Elevation="0">
                        <MudRating Style="align-items: center" ReadOnly=true SelectedValue=(int)_dogParkDetails.Rating />
                        <MudText Typo="Typo.body1">@_dogParkDetails.Rating</MudText>
                    </MudPaper>
                </MudItem>
                
                <MudItem xs="12">
                    @*Display facilities:*@
                    @if (_dogParkDetails.Facilities.Count() == 0)
                    {
                        <MudText Type="Typo.h5">Ingen Faciliteter</MudText>
                    }
                    else
                    {
                        <MudText Type="Typo.h5">Faciliteter:</MudText>
                        @foreach(var f in _dogParkDetails.Facilities)
                        {
                            <MudText Type="Typo.caption">@f.ToString()</MudText>
                        }
                    }
                </MudItem>

                <MudItem xs="12">
                    <MudText Typo="Typo.body2">@_dogParkDetails.Description</MudText>
                </MudItem>

                <MudItem xs="12">
                    <MudText Typo="Typo.h5">Ratings</MudText>
                    <div style="max-height:300px; overflow:scroll">
                        <RatingsListView/>
                    </div>
                </MudItem>


            </MudGrid>
            

        </MudCardContent>
    </MudCard>
}
else
{
    <MudCard>
        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="200px" Animation="Animation.Wave" />
        <MudCardContent>
            <MudSkeleton Width="30%" Height="42px;" Animation="Animation.Wave" />
            <MudSkeleton Width="80%" Animation="Animation.Wave" />
            <MudSkeleton Width="100%" Animation="Animation.Wave" />
        </MudCardContent>
    </MudCard>
}


@code {
    [Parameter]
    public int DogParkId { get; set; }
    private bool _isLoading;
    private DogParkDetailedDTO _dogParkDetails;

    protected override async void OnInitialized()
    {
        _isLoading = true;
        await Fetch();
        _isLoading = false;
        StateHasChanged();
    }

    private async Task Fetch()
    {
        _dogParkDetails = await ApiClient.GetDogPark(DogParkId);
    }
}
